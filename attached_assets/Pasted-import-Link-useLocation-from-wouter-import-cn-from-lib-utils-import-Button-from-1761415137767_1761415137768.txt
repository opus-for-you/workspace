import { Link, useLocation } from "wouter";
import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet";
import { Menu, Target, TrendingUp, BookOpen, User, LogOut } from "lucide-react";
import { useMutation } from "@tanstack/react-query";
import { queryClient } from "@/lib/queryClient";

const navItems = [
  { href: "/dashboard", label: "Dashboard", icon: Target },
  { href: "/goals", label: "Goals", icon: TrendingUp },
  { href: "/reflect", label: "Reflect", icon: BookOpen },
  { href: "/profile", label: "Profile", icon: User },
];

export function Navigation() {
  const [location] = useLocation();
  
  const logoutMutation = useMutation({
    mutationFn: async () => {
      const response = await fetch("/api/logout", {
        method: "POST",
        credentials: "include",
      });
      if (!response.ok) throw new Error("Failed to logout");
    },
    onSuccess: () => {
      queryClient.clear();
      window.location.href = "/login";
    },
  });
  
  return (
    <nav className="sticky top-0 z-40 border-b border-pearl bg-ivory/95 backdrop-blur-sm">
      <div className="px-8 md:px-16 py-6">
        <div className="flex justify-between items-center">
          <div className="flex items-center gap-12">
            <Link href="/dashboard">
              <a className="font-display text-2xl font-light text-charcoal hover:text-sage-deep transition-colors">
                Opus
              </a>
            </Link>
            
            <div className="hidden md:flex gap-8">
              {navItems.map((item) => (
                <Link key={item.href} href={item.href}>
                  <a
                    className={cn(
                      "text-editorial-sm tracking-wide transition-colors duration-200",
                      location === item.href
                        ? "text-charcoal"
                        : "text-stone hover:text-charcoal"
                    )}
                  >
                    {item.label}
                  </a>
                </Link>
              ))}
            </div>
          </div>
          
          <div className="flex items-center gap-4">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => logoutMutation.mutate()}
              className="hidden md:flex text-editorial-sm tracking-wider"
            >
              <LogOut className="mr-2 h-4 w-4" />
              LOGOUT
            </Button>
            
            {/* Mobile Menu */}
            <Sheet>
              <SheetTrigger asChild>
                <Button variant="ghost" size="icon" className="md:hidden">
                  <Menu className="h-5 w-5" />
                </Button>
              </SheetTrigger>
              <SheetContent side="right" className="w-[300px] bg-ivory">
                <nav className="flex flex-col gap-6 mt-8">
                  {navItems.map((item) => (
                    <Link key={item.href} href={item.href}>
                      <a
                        className={cn(
                          "flex items-center gap-3 text-lg transition-colors",
                          location === item.href
                            ? "text-charcoal"
                            : "text-stone hover:text-charcoal"
                        )}
                      >
                        <item.icon className="h-5 w-5" />
                        {item.label}
                      </a>
                    </Link>
                  ))}
                  <Button
                    variant="ghost"
                    className="justify-start"
                    onClick={() => logoutMutation.mutate()}
                  >
                    <LogOut className="mr-3 h-5 w-5" />
                    Logout
                  </Button>
                </nav>
              </SheetContent>
            </Sheet>
          </div>
        </div>
      </div>
    </nav>
  );
}